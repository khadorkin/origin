apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "ipfsCluster.fullname" . }}
  labels:
    app: {{ template "ipfsCluster.fullname" . }}
    app.kubernetes.io/name: origin
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: ipfs-cluster
  annotations:
    kubernetes.io/ingress.class: {{ .Release.Namespace }}-ingress
    kubernetes.io/tls-acme: "true"
    certmanager.k8s.io/cluster-issuer: {{ .Values.clusterIssuer }}
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "16"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "64k"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
spec:
  tls:
    - secretName: {{ template "ipfsCluster.host" . }}
      hosts:
        - {{ template "ipfsCluster.host" . }}
    {{- if eq .Release.Namespace "prod" }}
    - secretName: fs.ogn.app
      hosts:
        - fs.ogn.app
    {{- else }}
    - secretName: "fs.{{ .Release.Namespace }}.ogn.app"
      hosts:
        - "fs.{{ .Release.Namespace }}.ogn.app"
    {{- end }}
  rules:
    - host: {{ template "ipfsCluster.host" . }}
      http: &http_rules
        paths:
          - path: /
            backend:
              serviceName: {{ template "ipfsCluster.fullname" . }}
              servicePort: 9999  # ipfs-proxy
          - path: /ipfs
            backend:
              serviceName: {{ template "ipfsCluster.fullname" . }}
              servicePort: 8080
          - path: /ipns
            backend:
              serviceName: {{ template "ipfsCluster.fullname" . }}
              servicePort: 8080
    {{- if eq .Release.Namespace "prod" }}
    - host: fs.ogn.app
      http:
        paths:
          - path: /
            backend:
              serviceName: {{ template "ipfsCluster.fullname" . }}
              servicePort: 9999  # ipfs-proxy
          - path: /add
            backend: &cluster_api_service
              serviceName: {{ template "ipfsCluster.fullname" . }}
              servicePort: 9094 # ipfs-cluster restapi
          - path: /id
            backend: *cluster_api_service
          - path: /version
            backend: *cluster_api_service
          - path: /pins
            backend: *cluster_api_service
          - path: /api/v0/id
            backend: &open_api_service
              serviceName: "{{ template "ipfsCluster.fullname" . }}-headless"
              servicePort: 5001
          - path: /api/v0/dns
            backend: *open_api_service
          - path: /api/v0/get
            backend: *open_api_service
          - path: /api/v0/add
            backend: &api_service
              serviceName: {{ template "ipfsCluster.fullname" . }}
              servicePort: 9999
          - path: /api/v0/object/links
            backend: *api_service
          - path: /api/v0/object/patch/add-link
            backend: *api_service
          - path: /api/v0/object/patch/rm-link
            backend: *api_service
          - path: /ipfs
            backend:
              serviceName: {{ template "ipfsCluster.fullname" . }}
              servicePort: 8080
          - path: /ipns
            backend:
              serviceName: {{ template "ipfsCluster.fullname" . }}
              servicePort: 8080
    {{- else }}
    - host: "fs.{{ .Release.Namespace }}.ogn.app"
      http:
        paths:
          - path: /
            backend:
              serviceName: {{ template "ipfsCluster.fullname" . }}
              servicePort: 9999  # ipfs-proxy
          - path: /add
            backend: &cluster_api_service
              serviceName: {{ template "ipfsCluster.fullname" . }}
              servicePort: 9094 # 9999
          - path: /id
            backend: *cluster_api_service
          - path: /version
            backend: *cluster_api_service
          - path: /pins
            backend: *cluster_api_service
          - path: /api/v0/id
            backend: &open_api_service
              serviceName: "{{ template "ipfsCluster.fullname" . }}-headless"
              servicePort: 5001
          - path: /api/v0/dns
            backend: *open_api_service
          - path: /api/v0/get
            backend: *open_api_service
          - path: /api/v0/add
            backend: &api_service
              serviceName: {{ template "ipfsCluster.fullname" . }}
              servicePort: 9999
          - path: /api/v0/pin/ls
            backend: *api_service
          - path: /api/v0/pin/add
            backend: *api_service
          - path: /api/v0/object/links
            backend: *api_service
          - path: /api/v0/object/patch/add-link
            backend: *api_service
          - path: /api/v0/object/patch/rm-link
            backend: *api_service
          - path: /ipfs
            backend:
              serviceName: {{ template "ipfsCluster.fullname" . }}
              servicePort: 8080
          - path: /ipns
            backend:
              serviceName: {{ template "ipfsCluster.fullname" . }}
              servicePort: 8080
    {{- end }}
