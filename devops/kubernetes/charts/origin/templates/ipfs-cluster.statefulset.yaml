apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "ipfsCluster.fullname" . }}
  labels:
    app: {{ template "ipfsCluster.fullname" . }}
    app.kubernetes.io/name: origin
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: ipfs-cluster
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ template "ipfsCluster.fullname" . }}
  serviceName: {{ template "ipfsCluster.fullname" . }}-headless
  template:
    metadata:
      labels:
        app: {{ template "ipfsCluster.fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
    spec:
      dnsConfig:
        searches:
          - {{ template "ipfsCluster.fullname" . }}-headless.{{ .Release.Name }}.svc.cluster.local
          - {{ .Release.Name }}.svc.cluster.local
          - svc.cluster.local
          - cluster.local
      initContainers:
      - name: configure-ipfs
        image: "{{ .Values.ipfsImage }}:{{ .Values.ipfsImageTag }}"
        command: ["sh", "/custom/configure-ipfs.sh"]
        env:
          - name: IPFS_PATH
            value: /data/ipfs
        volumeMounts:
          - mountPath: /data/ipfs
          {{- if eq .Release.Namespace "prod" }}
            name: {{ template "ipfsCluster.fullname" . }}-data-ssd
          {{ else }}
            name: {{ template "ipfsCluster.fullname" . }}-data
          {{- end }}
          - name: configure-script
            mountPath: /custom
      containers:
      - name: {{ template "ipfsProxy.fullname" . }}
        image: "{{ .Values.containerRegistry }}/{{ .Release.Namespace }}/{{ .Values.ipfsProxyImage }}:{{ .Values.ipfsProxyImageTag }}"
        imagePullPolicy: Always
        ports:
          - containerPort: 9999
        env:
          - name: IPFS_CLUSTER_API_URL
            value: "http://127.0.0.1:9094"
          - name: IPFS_API_URL
            value: "http://127.0.0.1:9095"
          - name: IPFS_GATEWAY_URL
            value: "http://127.0.0.1:8080"
          - name: SHARED_SECRETS
            valueFrom:
              secretKeyRef:
                name: {{ template "ipfsCluster.fullname" . }}
                key: SHARED_SECRETS
      - name: ipfs
        image: "{{ .Values.ipfsImage }}:{{ .Values.ipfsImageTag }}"
        command: ["/usr/local/bin/start_ipfs", "daemon", "--migrate"]
        ports:
        - containerPort: 4001
          name: swarm
        - containerPort: 5001
          name: api
        - containerPort: 8080
          name: gateway
        env:
          - name: IPFS_PATH
            value: /data/ipfs
        volumeMounts:
          - mountPath: /data/ipfs
          {{- if eq .Release.Namespace "prod" }}
            name: {{ template "ipfsCluster.fullname" . }}-data-ssd
          {{ else }}
            name: {{ template "ipfsCluster.fullname" . }}-data
          {{- end }}
      - name: {{ template "ipfsCluster.fullname" . }}
        image: "{{ .Values.ipfsClusterImage }}:{{ .Values.ipfsClusterImageTag }}"
        command: ["sh", "/custom/entrypoint.sh"]
        ports:
        - containerPort: 9094
          name: clusterapi
        - containerPort: 9095
          name: ipfsproxy
        - containerPort: 9096
          name: clusterswarm
        env:
          - name: IPFS_CLUSTER_LOG_LEVEL
            value: "debug"
          - name: BOOTSTRAP_PEER_ID
            valueFrom:
              secretKeyRef:
                name: {{ template "ipfsCluster.fullname" . }}
                key: BOOTSTRAP_PEER_ID
          - name: BOOTSTRAP_PEER_PRIV_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "ipfsCluster.fullname" . }}
                key: BOOTSTRAP_PEER_PRIV_KEY
          - name: CLUSTER_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ template "ipfsCluster.fullname" . }}
                key: CLUSTER_SECRET
          - name: BASIC_AUTH_PW
            valueFrom:
              secretKeyRef:
                name: {{ template "ipfsCluster.fullname" . }}
                key: BASIC_AUTH_PW
          - name: CLUSTER_MONITOR_PING_INTERVAL
            value: "3m"
          - name: SVC_NAME
            value: {{ template "ipfsCluster.fullname" . }}
        volumeMounts:
          - mountPath: /data/ipfs-cluster
            name: {{ template "ipfsCluster.fullname" . }}-cluster-data
          - mountPath: /custom
            name: configure-script
      volumes:
      - name: configure-script
        configMap:
          name: {{ template "ipfsCluster.fullname" . }}-bootstrap-conf
  volumeClaimTemplates:
  - metadata:
      name: {{ template "ipfsCluster.fullname" . }}-cluster-data
    spec:
      storageClassName: "ssd"
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          # Changed to 50Gi in prod but changing the chart results in error
          # storage: {{ default "50Gi" .Values.ipfsClusterStorageRequestSize }}
          storage: {{ default "8Gi" .Values.ipfsClusterStorageRequestSize }}
  {{- if eq .Release.Namespace "prod" }}
  - metadata:
      name: {{ template "ipfsCluster.fullname" . }}-data-ssd
    spec:
      storageClassName: "ssd"
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ default "500Gi" .Values.ipfsStorageRequestSize }}
  {{ else }}
  - metadata:
      name: {{ template "ipfsCluster.fullname" . }}-data
    spec:
      storageClassName: "ssd"
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ default "20Gi" .Values.ipfsStorageRequestSize }}
  {{- end }}
