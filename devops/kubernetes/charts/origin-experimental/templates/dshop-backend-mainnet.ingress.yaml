apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "dshopBackendMainnet.fullname" . }}
  labels:
    app: {{ template "dshopBackendMainnet.fullname" . }}
    app.kubernetes.io/name: dshop
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: dshop-backend-mainnet
  annotations:
    kubernetes.io/ingress.class: {{ .Release.Namespace }}-ingress
    kubernetes.io/tls-acme: "true"
    certmanager.k8s.io/cluster-issuer: {{ .Values.clusterIssuer }}
    nginx.ingress.kubernetes.io/enable-access-log: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/limit-rps: "10"
    nginx.ingress.kubernetes.io/proxy-next-upstream: "error invalid_header"
spec:
  tls:
    - secretName: "{{ .Values.dshopBackendMainnetHost }}"
      hosts:
        - {{ .Values.dshopBackendMainnetHost }}
    - secretName: "dshopapi.ogn.app"
      hosts:
        - "dshopapi.ogn.app"
    - secretName: "dshop.originprotocol.com"
      hosts:
        - "dshop.originprotocol.com"
  rules:
  - host: {{ .Values.dshopBackendMainnetHost }}
    http: &http_rules
      paths:
        - path: /
          backend:
            serviceName: {{ template "dshopBackendMainnet.fullname" . }}
            servicePort: 3000
  - host: "dshopapi.ogn.app"
    http: *http_rules
  - host: "dshop.originprotocol.com"
    http: *http_rules
